@model LoginAppUserDto
@inject IConfiguration configuration
@{
    var sitekey = configuration["RecaptchaSettings:SiteKey"];
    ViewData["Title"] = "Profile Settings";
    Layout = "~/Views/UILayout/Index.cshtml";
}




<div class="card dark">
    <h3>Giriş Yap</h3>

    <div class="profile-info">

    <form class="user" method="post" onsubmit="onSubmit(event)">
        <div asp-validation-summary="ModelOnly"></div>

        <input type="hidden" id="recaptchaTokenId" asp-for="RecaptchaToken" />
            <div class="input-group">
            <input type="text" class="form-control form-control-user" id="exampleInputEmail" placeholder="Kullanıcı Adı" asp-for="UserName" required>
        </div>



            <div class="input-group">
            <input type="password" class="form-control form-control-user" id="exampleInputPassword" placeholder="Şifre" asp-for="Password" required>
            <span asp-validation-for="Password" class="text-danger"></span>

        </div>


            <button type="submit" class="btn btn-primary">Giriş Yap</button>

            <div id="html_element" style="margin-top: 20px; margin-left: 27px;"></div>

        </form>

    </div>
</div>

<script type="text/javascript">
    var onloadCallback = function () {
        grecaptcha.render('html_element', {
            'sitekey': '@sitekey'
        });
    };

    function onSubmit(event) {
        var token = grecaptcha.getResponse();
        if (token.length === 0) {
            event.preventDefault(); // reCAPTCHA doğrulaması yapılmamışsa form gönderimini engelle
            alert('Lütfen reCAPTCHA doğrulamasını tamamlayın.');
            return false;
        }
        document.getElementById("recaptchaTokenId").value = token;
        return true; // Token alındığında formu gönder

    }
</script>

<script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit" async defer></script>
